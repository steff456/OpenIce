/*******************************************************************************
 * Copyright (c) 2017, MD PnP Program
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
apply plugin: 'java'
apply plugin: 'application'
apply plugin: "me.champeau.jbake"
apply from: 'javafx.plugin'

defaultTasks 'build'

jfxDeploy {
    verbose = true
}

applicationName = 'OpenICE'

javafx {
    appID 'org.mdpnp.apps.testapp.Main'
    appName 'OpenICE'
    mainClass 'org.mdpnp.apps.testapp.Main'
    

    profiles {
        macosx {
        	// comment this line out so you don't have to use jdk 1.8 update 60
        	// this hasn't been tested completely and may cause errors
			// javaRuntime = '/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/'

            bundleArguments = [
                // for mac apps
                'mac.CFBundleIdentifier' : 'org.mdpnp.apps.testapp.OpenICE',
                'mac.CFBundleName' : 'OpenICE',
                'mac.signing-key-user-name' : 'JEFFREY PLOURDE',
                //'mac.signing-key-developer-id-app' : 'Developer ID Application: JEFFREY PLOURDE', // usually redundant with mac.signing-key-user-name
                // for PKG bundles
                //'mac.signing-key-developer-id-installer' : 'Developer ID Installer: JEFFREY PLOURDE', // usually redundant with mac.signing-key-user-name

                // for Mac App Store Ready bundles
                //'mac.app-store-entitlements' : 'src/deploy/package/NetworkEntitlements.entitlements',
                //'mac.signing-key-app' : '3rd Party Mac Developer Applicaiton: JEFFREY PLOURDE', // usually redundant with mac.signing-key-user-name
                //'mac.signing-key-pkg' : '3rd Party Mac Developer Installer: JEFFREY PLOURDE', // usually redundant with mac.signing-key-user-name

            ]
        }
        windows {
            
        }
        linux {
            
        }
    }
}

jbake {
    srcDirName = 'src/docs'
    destDirName = 'docs'
}

buildscript {

    repositories {
        maven {
            url 'https://build.openice.info/artifactory/remote-repos' 
        }
        maven {
            url="https://dl.bintray.com/calmdev/gradle-plugins"
        }
    }

    dependencies {
        classpath "me.champeau.gradle:jbake-gradle-plugin:0.2.1"
    }
}

sourceCompatibility = JAVA_VERSION_SOURCE
targetCompatibility = JAVA_VERSION_CLASSES

mainClassName = 'org.mdpnp.apps.testapp.Main'

Date buildTimeAndDate = new Date()
ext {
    buildDate = new java.text.SimpleDateFormat('dd-MMM-yyyy').format(buildTimeAndDate)
    buildTime = new java.text.SimpleDateFormat('hh:mm aa').format(buildTimeAndDate)
    specificationVersion = project.version.substring(0, project.version.lastIndexOf('.')) 
}

manifest { attributes "Main-Class" : mainClassName }

dependencies {
    compile project(':interop-lab:demo-devices')
    compile project(':interop-lab:demo-guis')
    compile project(':interop-lab:demo-guis-javafx')
    runtime project(':interop-lab:demo-purejavacomm')

    runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: SLF4J_VERSION
    runtime group: 'org.mdpnp.apps.testapp.pca', name: 'mdpnp-sounds', version: '0.1.0'

    //
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    
    // Default capture device is a trimmed down piece of OpenIMAJ
    compile group: 'com.github.sarxos', name: 'webcam-capture', version: '0.3.10'

    compile group: 'org.springframework', name: 'spring-context', version: '4.1.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc',    version: '4.1.3.RELEASE'
    compile group: 'com.google.guava',    name: 'guava',          version: '18.0'

    compile group: 'ca.uhn.hapi', name: 'hapi-base', version: '2.2'
    compile group: 'ca.uhn.hapi', name: 'hapi-structures-v26', version: '2.2'
    
    compile group: 'ca.uhn.hapi.fhir', name: 'hapi-fhir-base', version: '0.9'
    compile group: 'ca.uhn.hapi.fhir', name: 'hapi-fhir-structures-dstu2', version: '0.9'
    
    compile group: 'com.jeffplourde', name: 'Utility', version: '0.0.1'
    
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'

    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.2'

    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.4.1'

    compile group: 'org.mongodb', name: 'bson',                version: '3.2.2'
    compile group: 'org.mongodb', name: 'mongodb-driver-core', version: '3.2.2'
    compile group: 'org.mongodb', name: 'mongodb-driver',      version: '3.2.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes("Main-Class": 'org.mdpnp.apps.testapp.Main', 
        "Built-By": System.properties['user.name'], 
        "Created-By": System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.getProperty("java.vm.version") + ")",
        "Implementation-Title": project.name, 
        "Implementation-Version": project.version, 
        "Build-Date": buildDate, 
        "Build-Time": buildTime,
        "Specification-Title": project.name, 
        "Specification-Version": specificationVersion, 
        "Implementation-Vendor": project.group,
        "Specification-Vendor": project.group, 
        "Build-Number": project.version)
    }
}
